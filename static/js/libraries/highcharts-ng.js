"undefined"!=typeof module&&"undefined"!=typeof exports&&module.exports===exports&&(module.exports="highcharts-ng"),function(){"use strict";function indexOf(arr,find,i){void 0===i&&(i=0),i<0&&(i+=arr.length),i<0&&(i=0);for(var n=arr.length;i<n;i++)if(i in arr&&arr[i]===find)return i;return-1}function prependMethod(obj,method,func){var original=obj[method];obj[method]=function(){var args=Array.prototype.slice.call(arguments);return func.apply(this,args),original?original.apply(this,args):void 0}}function deepExtend(destination,source){if(angular.isArray(source)){destination=angular.isArray(destination)?destination:[];for(var i=0;i<source.length;i++)destination[i]=deepExtend(destination[i]||{},source[i])}else if(angular.isObject(source)){destination=angular.isObject(destination)?destination:{};for(var property in source)destination[property]=deepExtend(destination[property]||{},source[property])}else destination=source;return destination}function highchartsNG($q,$window){function getHighchartsOnce(){return highchartsProm}var highchartsProm=$q.when($window.Highcharts);return{getHighcharts:getHighchartsOnce,ready:function(callback,thisArg){getHighchartsOnce().then(function(){callback.call(thisArg)})}}}function highchart(highchartsNGUtils,$timeout){function linkWithHighcharts(Highcharts,scope,element,attrs){var prevSeriesOptions={},chart=!1,processSeries=function(series,seriesOld){var i,ids=[];if(series){var setIds=ensureIds(series);if(setIds&&!scope.disableDataWatch)return!1;if(angular.forEach(series,function(s,idx){ids.push(s.id);var chartSeries=chart.get(s.id);if(chartSeries)if(angular.equals(prevSeriesOptions[s.id],chartOptionsWithoutEasyOptions(s)))if(void 0!==s.visible&&chartSeries.visible!==s.visible&&chartSeries.setVisible(s.visible,!1),idx<seriesOld.length){var sOld=seriesOld[idx],sCopy=angular.copy(sOld),ptNew=s.data[s.data.length-1];sCopy.data.push(ptNew),angular.equals(sCopy,s)?chartSeries.addPoint(ptNew,!1):(sCopy.data.shift(),angular.equals(sCopy,s)?chartSeries.addPoint(ptNew,!1,!0):chartSeries.setData(angular.copy(s.data),!1))}else chartSeries.setData(angular.copy(s.data),!1);else chartSeries.update(angular.copy(s),!1);else chart.addSeries(angular.copy(s),!1);prevSeriesOptions[s.id]=chartOptionsWithoutEasyOptions(s)}),scope.config.noData){var chartContainsData=!1;for(i=0;i<series.length;i++)if(series[i].data&&series[i].data.length>0){chartContainsData=!0;break}chartContainsData?chart.hideLoading():chart.showLoading(scope.config.noData)}}for(i=chart.series.length-1;i>=0;i--){var s=chart.series[i];"highcharts-navigator-series"!==s.options.id&&indexOf(ids,s.options.id)<0&&s.remove(!1)}return!0},initChart=function(){chart&&chart.destroy(),prevSeriesOptions={};var config=scope.config||{},mergedOptions=getMergedOptions(scope,element,config),chartType=getChartType(scope),workaroundAfterDraw=function(chart){$timeout(function(){if("undefined"!=typeof chart&&chart){var $thisChartContainer=$(chart.renderTo),chartContainerHeight=$thisChartContainer.height(),chartContainerWidth=$thisChartContainer.width();NaN==chart.isResizing&&chartContainerWidth>0&&chartContainerHeight>0&&chart.setSize(chartContainerWidth,chartContainerHeight,!0),config.callback&&config.callback(chart)}},0)},callback=workaroundAfterDraw;chart=new Highcharts[chartType](mergedOptions,callback);for(var i=0;i<axisNames.length;i++)config[axisNames[i]]&&processExtremes(chart,config[axisNames[i]],axisNames[i]);config.loading&&chart.showLoading(),scope.$watchGroup([function(){return angular.element(chart.renderTo).height()},function(){return angular.element(chart.renderTo).width()}],function(newSizes,oldSizes){var chartContainerHeight=newSizes[0],chartContainerWidth=newSizes[1];if("undefined"!=typeof chart&&chart&&(chartContainerHeight>0&&chartContainerWidth>0&&chart.setSize(chartContainerWidth,chartContainerHeight,!0),config.options&&config.options.chart&&config.options.chart.events&&config.options.chart.events.redraw)){var returnChartRedraw={target:chart};config.options.chart.events.redraw(returnChartRedraw)}}),config.getHighcharts=function(){return chart}};initChart(),scope.disableDataWatch?scope.$watchCollection("config.series",function(newSeries,oldSeries){processSeries(newSeries),chart.redraw()}):scope.$watch("config.series",function(newSeries,oldSeries){var needsRedraw=processSeries(newSeries,oldSeries);needsRedraw&&(chart.redraw(),chart.reflow())},!0),scope.$watch("config.title",function(newTitle){chart.setTitle(newTitle,!0)},!0),scope.$watch("config.subtitle",function(newSubtitle){chart.setTitle(!0,newSubtitle)},!0),scope.$watch("config.loading",function(loading){loading?chart.showLoading(loading===!0?null:loading):chart.hideLoading()}),scope.$watch("config.noData",function(noData){scope.config&&scope.config.loading&&chart.showLoading(noData)},!0),scope.$watch("config.credits.enabled",function(enabled){enabled?chart.credits.show():chart.credits&&chart.credits.hide()}),scope.$watch(getChartType,function(chartType,oldChartType){chartType!==oldChartType&&initChart()}),angular.forEach(axisNames,function(axisName){scope.$watch("config."+axisName,function(newAxes){if(newAxes){if(angular.isArray(newAxes))for(var axisIndex=0;axisIndex<newAxes.length;axisIndex++){var axis=newAxes[axisIndex];axisIndex<chart[axisName].length&&(chart[axisName][axisIndex].update(axis,!1),updateZoom(chart[axisName][axisIndex],angular.copy(axis)))}else chart[axisName][0].update(newAxes,!1),updateZoom(chart[axisName][0],angular.copy(newAxes));chart.redraw()}},!0)}),scope.$watch("config.options",function(newOptions,oldOptions,scope){newOptions!==oldOptions&&(initChart(),chart.redraw())},!0),scope.$watch("config.size",function(newSize,oldSize){newSize!==oldSize&&newSize&&chart.setSize(newSize.width||chart.chartWidth,newSize.height||chart.chartHeight)},!0),scope.$on("highchartsng.redraw",function(){chart.redraw()}),scope.$on("highchartsng.reflow",function(){chart.reflow()}),scope.$on("$destroy",function(){if(chart){try{chart.destroy()}catch(ex){}$timeout(function(){element.remove()},0)}})}function link(scope,element,attrs){function highchartsCb(Highcarts){linkWithHighcharts(Highcharts,scope,element,attrs)}highchartsNGUtils.getHighcharts().then(highchartsCb)}var seriesId=0,ensureIds=function(series){var changed=!1;return angular.forEach(series,function(s){angular.isDefined(s.id)||(s.id="series-"+seriesId++,changed=!0)}),changed},axisNames=["xAxis","yAxis"],chartTypeMap={stock:"StockChart",map:"Map",chart:"Chart"},getMergedOptions=function(scope,element,config){var mergedOptions={},defaultOptions={chart:{events:{}},title:{},subtitle:{},series:[],credits:{},plotOptions:{},navigator:{enabled:!1},xAxis:{events:{}},yAxis:{events:{}}};return mergedOptions=config.options?deepExtend(defaultOptions,config.options):defaultOptions,mergedOptions.chart.renderTo=element[0],angular.forEach(axisNames,function(axisName){angular.isDefined(config[axisName])&&(mergedOptions[axisName]=deepExtend(mergedOptions[axisName]||{},config[axisName]),(angular.isDefined(config[axisName].currentMin)||angular.isDefined(config[axisName].currentMax))&&(prependMethod(mergedOptions.chart.events,"selection",function(e){var thisChart=this;e[axisName]?scope.$apply(function(){scope.config[axisName].currentMin=e[axisName][0].min,scope.config[axisName].currentMax=e[axisName][0].max}):scope.$apply(function(){scope.config[axisName].currentMin=thisChart[axisName][0].dataMin,scope.config[axisName].currentMax=thisChart[axisName][0].dataMax})}),prependMethod(mergedOptions.chart.events,"addSeries",function(e){scope.config[axisName].currentMin=this[axisName][0].min||scope.config[axisName].currentMin,scope.config[axisName].currentMax=this[axisName][0].max||scope.config[axisName].currentMax}),prependMethod(mergedOptions[axisName].events,"setExtremes",function(e){e.trigger&&"zoom"!==e.trigger&&$timeout(function(){scope.config[axisName].currentMin=e.min,scope.config[axisName].currentMax=e.max,scope.config[axisName].min=e.min,scope.config[axisName].max=e.max},0)})))}),config.title&&(mergedOptions.title=config.title),config.subtitle&&(mergedOptions.subtitle=config.subtitle),config.drilldown&&(mergedOptions.drilldown=config.drilldown),config.credits&&(mergedOptions.credits=config.credits),config.size&&(config.size.width&&(mergedOptions.chart.width=config.size.width),config.size.height&&(mergedOptions.chart.height=config.size.height)),mergedOptions},updateZoom=function(axis,modelAxis){var extremes=axis.getExtremes();modelAxis.currentMin===extremes.dataMin&&modelAxis.currentMax===extremes.dataMax||(axis.setExtremes?axis.setExtremes(modelAxis.currentMin,modelAxis.currentMax,!1):axis.detachedsetExtremes(modelAxis.currentMin,modelAxis.currentMax,!1))},processExtremes=function(chart,axis,axisName){(axis.currentMin||axis.currentMax)&&chart[axisName][0].setExtremes(axis.currentMin,axis.currentMax,!0)},chartOptionsWithoutEasyOptions=function(options){return angular.extend(deepExtend({},options),{data:null,visible:null})},getChartType=function(scope){return scope.config&&void 0!==scope.config?chartTypeMap[(""+scope.config.options.chart.type).toLowerCase()]||(scope.config.useHighStocks?"StockChart":"Chart"):"Chart"};return{restrict:"EAC",replace:!0,template:"<div></div>",scope:{config:"=",disableDataWatch:"="},link:link}}angular.module("highcharts-ng",[]).factory("highchartsNG",["$q","$window",highchartsNG]).directive("highchart",["highchartsNG","$timeout",highchart])}();
//# sourceMappingURL=highcharts-ng.js.map
