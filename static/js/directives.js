define(["core"],function(app){var spinnerLoaderDirectiveInjectParams=[],spinnerLoaderDirective=function(){return{restrict:"E",transclude:!0,template:'<div class="spinnerLoaderSvg"><svg class="circular" viewBox="25 25 50 50"><circle class="path" cx="50" cy="50" r="20" fill="none" stroke-width="2" stroke-miterlimit="10"/></svg></div>',link:function($scope,$element,$attrs){}}};spinnerLoaderDirective.$inject=spinnerLoaderDirectiveInjectParams,app.directive("spinnerLoader",spinnerLoaderDirective);var loaderOnContentDirectiveInjectParams=["$timeout","$compile"],loaderOnContentDirective=function($timeout,$compile){return{restrict:"E",scope:{loadingReason:"@?",loaderType:"@?",loaderAlign:"@?"},template:'<div class="loadingOnContent" ng-class="[((loaderType | isEmpty) ? \'small\' : loaderType), ((loaderAlign | isEmpty) ? \'any\' : loaderAlign)]"><div class="loader"><spinner-loader></spinner-loader></div><span class="loadingReason" ng-if="!(loadingReason | isEmpty)">{{loadingReason}}...</span></div>',link:function($scope,element,$attrs){element.on("$destroy",function(){$scope.$destroy()})}}};loaderOnContentDirective.$inject=loaderOnContentDirectiveInjectParams,app.directive("loaderOnContent",loaderOnContentDirective);var fullpageSectionsDirectiveInjectParams=["$timeout"],fullpageSectionsDirective=function($timeout){return{restrict:"A",link:function($scope,$element,$attrs){require(["jquery-fullpage"],function(){$element.fullpage(),$(".knowmorebt a").on("click",function(e){e.preventDefault(),$.fn.fullpage.moveSectionDown()})})}}};fullpageSectionsDirective.$inject=fullpageSectionsDirectiveInjectParams,app.directive("fullpageSections",fullpageSectionsDirective);var svgInlineDirectiveInjectParams=[],svgInlineDirective=function(){return{restrict:"A",scope:{url:"@"},link:function($scope,$element,$attrs){var imgID=$attrs.id,imgClass=$attrs["class"];$.get($scope.url,function(data){var $svg=$(data).find("svg");"undefined"!=typeof imgID&&($svg=$svg.attr("id",imgID)),"undefined"!=typeof imgClass&&""!=imgClass&&($svg=$svg.attr("class",imgClass+" replaced-svg")),$svg=$svg.removeAttr("xmlns:a"),$element.replaceWith($svg)},"xml")}}};svgInlineDirective.$inject=svgInlineDirectiveInjectParams,app.directive("svgInline",svgInlineDirective);var owlCarouselDirectiveInjectParams=[],owlCarouselDirective=function(){return{restrict:"A",link:function($scope,$element,$attrs){require(["owl-carousel"],function(){$element.hasClass("owl-carousel")||$element.addClass("owl-carousel");var thisOwlCarousel=$element;$element.owlCarousel({loop:!1,slideBy:"page",margin:10,navRewind:!1,navText:["<i class='icon-arrow-left turquoise-version'></i>","<i class='icon-arrow-right turquoise-version'></i>"],responsiveClass:!0,responsive:{0:{items:1,loop:!0,nav:!0,dots:!1},759:{items:3,loop:!0,nav:!0,dots:!1},820:{items:3,nav:!0,loop:!1}}}),$element.on("$destroy",function(){$scope.$destroy()}),$scope.$on("$destroy",function(){angular.isDefined(thisOwlCarousel)&&thisOwlCarousel.trigger("destroy.owl.carousel")})})}}};owlCarouselDirective.$inject=owlCarouselDirectiveInjectParams,app.directive("owlCarousel",owlCarouselDirective);var modalDialogDirectiveInjectParams=["$rootScope","$timeout","$compile"],modalDialogDirective=function($rootScope,$timeout,$compile){return{restrict:"E",scope:{show:"=ngShow",isClosable:"=",dialogTitle:"@",onClose:"&?",disableAnimate:"="},templateUrl:angular.btgUtilities.URIbaseContext+"views/templates/modal.html",transclude:!0,link:function($scope,$element,$attrs){$element.detach().appendTo("body"),$scope.show=!1,$scope.dialogStyle={},$scope.hasButtons=$element.find(".modal-button-toolbar").length>0,$scope.qtButtons=$element.find(".modal-button-toolbar").children().length;var adjustModalSizes=function(){$attrs.width&&($scope.dialogStyle.width=$attrs.width),$attrs.height&&($scope.dialogStyle.height=$attrs.height)};adjustModalSizes();var adjustModalPosition=function(){var thisModal=$element.find(".ng-modal-dialog");$scope.show?$timeout(function(){var thisModalHeight=thisModal.outerHeight(),viewportHeight=$(window).height(),freeSpaceOnScreen=viewportHeight-thisModalHeight,marginVertToApply=freeSpaceOnScreen/2;thisModal.css({marginBottom:marginVertToApply>0?marginVertToApply+"px":"",marginTop:marginVertToApply>0?marginVertToApply+"px":""})}):thisModal.css({marginBottom:"",marginTop:""})};$attrs.title&&($scope.dialogStyle.title=$compile($attrs.title)($scope)),$scope.hideModal=function(){$scope.show=!1};var watchShowModal=$scope.$watch("show",function(newVal,oldVal){if(newVal&&!oldVal?(document.getElementsByTagName("body")[0].style.overflow="hidden",adjustModalPosition()):document.getElementsByTagName("body")[0].style.overflow="",!newVal&&oldVal&&null!=$scope.onClose)return $scope.onClose()}),watchModalWindowResize=$rootScope.$on("viewPort_changed",function(){$timeout(function(){adjustModalPosition()},50)});$element.on("$destroy",function(){$scope.$destroy()}),$scope.$on("$destroy",function(){angular.isDefined(watchShowModal)&&watchShowModal(),angular.isDefined(watchModalWindowResize)&&watchShowModal()})}}};modalDialogDirective.$inject=modalDialogDirectiveInjectParams,app.directive("modalDialog",modalDialogDirective);var overlayBlockScreenDirectiveInjectParams=["$rootScope","$timeout","$compile"],overlayBlockScreenDirective=function($rootScope,$timeout,$compile){return{restrict:"E",scope:{show:"=ngShow",showDefaultCloseButton:"=closeButton",showMessageTypeIcon:"@messageType",messageTitle:"@messageTitle",onClose:"&?"},templateUrl:angular.btgUtilities.URIbaseContext+"views/templates/overlay_block_screen.html",transclude:!0,link:function($scope,$element,$attrs){$scope.show=!1,$scope.showMessageTypeIcon="success"==$scope.showMessageTypeIcon||"error"==$scope.showMessageTypeIcon||"info"==$scope.showMessageTypeIcon?$scope.showMessageTypeIcon:null;var adjustOverlayModalPosition=function(){$scope.show&&$timeout(function(){var thisModal=$element.find(".overlay-block-screen_container"),thisModalHeight=thisModal.outerHeight(),viewportHeight=$(window).height(),freeSpaceOnScreen=viewportHeight-thisModalHeight,marginVertToApply=freeSpaceOnScreen/2;thisModal.css({marginBottom:marginVertToApply>0?marginVertToApply+"px":"",marginTop:marginVertToApply>0?marginVertToApply+"px":""})})};$scope.hideModal=function(){$scope.show=!1};var watchShowOverlayBlockScreen=$scope.$watch("show",function(newVal,oldVal){if(newVal&&!oldVal?(document.getElementsByTagName("body")[0].style.overflow="hidden",adjustOverlayModalPosition()):document.getElementsByTagName("body")[0].style.overflow="",!newVal&&oldVal&&null!=$scope.onClose)return $scope.onClose()}),watchOverlayModalWindowResize=$rootScope.$on("viewPort_changed",function(){$timeout(function(){adjustOverlayModalPosition()},50)});$element.on("$destroy",function(){$scope.$destroy()}),$scope.$on("$destroy",function(){angular.isDefined(watchShowOverlayBlockScreen)&&watchShowOverlayBlockScreen(),angular.isDefined(watchOverlayModalWindowResize)&&watchOverlayModalWindowResize()})}}};overlayBlockScreenDirective.$inject=overlayBlockScreenDirectiveInjectParams,app.directive("overlayBlockScreen",overlayBlockScreenDirective);var inputDirectiveInjectParams=["$filter","$timeout","$compile"],inputDirective=function($filter,$timeout,$compile){return{restrict:"E",require:"?ngModel",link:function($scope,$element,$attrs,ngModelCtrl){if("radio"!=$attrs.type&&"checkbox"!=$attrs.type){if((angular.btgUtilities.browser.mozilla||angular.btgUtilities.browser.msie||angular.btgUtilities.browser.chrome&&parseFloat(angular.btgUtilities.browser.version)<45)&&$timeout(function(){$element.removeAttr("placeholder"),$filter("isEmpty")($element.val())&&$timeout(function(){$element[0].value=""})}),$element.next(".control-label").length>0){var checkIfIsNotEmpty=function(el){$scope.$applyAsync(function(){$filter("isEmpty")(el.val())?el.removeClass("ng-notempty"):el.addClass("ng-notempty")})};checkIfIsNotEmpty($element),$element.on("focus blur keydown",function(){checkIfIsNotEmpty($element)}),ngModelCtrl.$formatters.push(function(viewValue){return checkIfIsNotEmpty($element),viewValue})}$element.on("$destroy",function(){$scope.$destroy()})}}}};inputDirective.$inject=inputDirectiveInjectParams,app.directive("input",inputDirective)});
//# sourceMappingURL=directives.js.map
